{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenApi specification - Desafio Serasa Experian",
        "description": "OpenApi documentation for Desafio Serasa Experian",
        "termsOfService": "Terms of service",
        "contact": {
            "name": "Desafio Serasa Experian",
            "url": "https://github.com/rayanabonfanti",
            "email": "rayanabonfanti@gmail.com"
        },
        "license": {
            "name": "Licence Desafio",
            "url": "https://github.com/rayanabonfanti"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local TEST"
        },
        {
            "url": "https://localhost:8443",
            "description": "Local PROD"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Autenticação",
            "description": "API para autenticar pessoas no sistema."
        },
        {
            "name": "Pessoas",
            "description": "API para manipular dados de pessoas do sistema."
        }
    ],
    "paths": {
        "/user/salvar": {
            "post": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Salva os dados de pessoa.",
                "description": "Endpoint responsável por salvar os dados de pessoa.",
                "operationId": "salvar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalvarPessoaRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Pessoa não encontrada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Autenticação"
                ],
                "summary": "Autentica os dados de pessoa.",
                "description": "Endpoint responsável por autenticar os dados de pessoa.",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Pessoa não autenticada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponseDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/atualizar": {
            "patch": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Atualizar os dados de pessoa.",
                "description": "Endpoint responsável por atualizar os dados de pessoa.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AtualizarPessoaRequestDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "404": {
                        "description": "Pessoa não encontrada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pessoa"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/score": {
            "get": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Recuperar informação de score de uma pessoa.",
                "description": "Endpoint responsável por recuperar informação de score de uma pessoa.",
                "operationId": "getScoreStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Pessoa não encontrada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/pessoasPaginadas": {
            "get": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Recuperar dados de pessoas paginadas filtrando e ordenando por nome, idade ou cep.",
                "description": "Endpoint responsável por recuperar dados de pessoas paginadas filtrando e ordenando por nome, idade ou cep.",
                "operationId": "getPagedPeople",
                "parameters": [
                    {
                        "name": "pessoaFilterDTO",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PessoaFilterDTO"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Pessoa não encontrada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePessoa"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/healthcheck": {
            "get": {
                "tags": [
                    "Pessoas"
                ],
                "operationId": "healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/healthcheck": {
            "get": {
                "tags": [
                    "Autenticação"
                ],
                "operationId": "healthcheck_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/deletar": {
            "delete": {
                "tags": [
                    "Pessoas"
                ],
                "summary": "Deletar os dados logicamente de pessoa.",
                "description": "Endpoint responsável por deletar os dados logicamente de pessoa.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Pessoa não encontrada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Requisição mal formatada.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Parâmetro(s) obrigatório(s) foi(foram) informado(s) incorretamente.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Não autorizado.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Serviço Indisponível.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Sucesso.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SalvarPessoaRequestDto": {
                "required": [
                    "cep",
                    "login",
                    "password",
                    "score"
                ],
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "USER"
                        ]
                    },
                    "cep": {
                        "pattern": "^\\d{8}$",
                        "type": "string"
                    },
                    "nome": {
                        "type": "string"
                    },
                    "idade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "telefone": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Endereco": {
                "required": [
                    "cep"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cep": {
                        "type": "string"
                    },
                    "estado": {
                        "type": "string"
                    },
                    "cidade": {
                        "type": "string"
                    },
                    "bairro": {
                        "type": "string"
                    },
                    "logradouro": {
                        "type": "string"
                    }
                }
            },
            "Pessoa": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ADMIN",
                            "USER"
                        ]
                    },
                    "nome": {
                        "type": "string"
                    },
                    "idade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "telefone": {
                        "type": "string"
                    },
                    "score": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scoreDescricao": {
                        "type": "string"
                    },
                    "endereco": {
                        "$ref": "#/components/schemas/Endereco"
                    },
                    "deleted": {
                        "type": "boolean"
                    }
                }
            },
            "LoginRequestDto": {
                "required": [
                    "login",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "LoginResponseDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "AtualizarPessoaRequestDto": {
                "type": "object",
                "properties": {
                    "nome": {
                        "type": "string"
                    },
                    "idade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "telefone": {
                        "type": "string"
                    },
                    "cep": {
                        "pattern": "^\\d{8}$",
                        "type": "string"
                    }
                }
            },
            "PessoaFilterDTO": {
                "required": [
                    "sortField"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sortField": {
                        "type": "string"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "nome": {
                        "type": "string"
                    },
                    "idade": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cep": {
                        "type": "string"
                    }
                }
            },
            "PagePessoa": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pessoa"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT auth description",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}